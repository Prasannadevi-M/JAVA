package application;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.VBox;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.stage.Stage;
import javafx.geometry.Insets;
import java.io.File;
import java.net.MalformedURLException;
import javafx.scene.media.MediaException;

public class Main extends Application {

    private MediaPlayer mediaPlayer;
    private Label statusLabel = new Label("Ready");

    @Override
    public void start(Stage primaryStage) {
        // --- 1. Load Media File (Handles TC4 and C:\\Users\\2007p\\Downloads\\video.mp4TC5 during load) ---
        String mediaPath = "C:\\Users\\2007p\\Downloads\\images.jpeg"; // Change this to your test file
        File mediaFile = new File(mediaPath);
        
        // This is a placeholder for the error cases.
        // To test TC4 (No file loaded), set mediaPath to a non-existent file.
        // To test TC5 (Unsupported format), use an invalid media file.

        if (!mediaFile.exists()) {
            // *TC4: No file loaded -> Output: Error message*
            statusLabel.setText("TC4: Error! Media file not found: " + mediaPath);
            mediaPlayer = null;
        } else {
            try {
                String uri = mediaFile.toURI().toURL().toExternalForm();
                Media media = new Media(uri);
                mediaPlayer = new MediaPlayer(media);

                // *Handle TC5 (Play file in unsupported format -> Output: MediaException)*
                media.setOnError(() -> {
                    // This catches general Media loading errors, often related to unsupported formats
                    statusLabel.setText("TC5: Error! MediaException: Unsupported format or load error.");
                    mediaPlayer = null;
                });
                
            } catch (MediaException | MalformedURLException e) {
                // This catches a MediaException during initial creation
                 statusLabel.setText("TC5: Error! MediaException: " + e.getMessage());
                 mediaPlayer = null;
            }
        }

        // --- 2. Create Buttons and Bind Methods ---
        Button playButton = new Button("Play");
        Button pauseButton = new Button("Pause");
        Button stopButton = new Button("Stop");

        playButton.setOnAction(e -> handlePlay());
        pauseButton.setOnAction(e -> handlePause());
        stopButton.setOnAction(e -> handleStop());
        
        // Disable buttons if media could not be loaded (TC4/TC5)
        boolean isDisabled = mediaPlayer == null;
        playButton.setDisable(isDisabled);
        pauseButton.setDisable(isDisabled);
        stopButton.setDisable(isDisabled);

        // --- 3. Setup Layout and Stage ---
        VBox root = new VBox(10, statusLabel, playButton, pauseButton, stopButton);
        root.setPadding(new Insets(20));

        Scene scene = new Scene(root, 300, 200);
        primaryStage.setTitle("JavaFX Media Player");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    // --- 4. Control Methods (Implementing TC1, TC2, TC3) ---

    // *TC1: Click Play -> Output: Media starts*
    private void handlePlay() {
        if (mediaPlayer != null) {
            mediaPlayer.play();
            statusLabel.setText("TC1: Media starts (Playing)");
        }
    }

    // *TC2: Click Pause -> Output: Media pauses*
    private void handlePause() {
        if (mediaPlayer != null) {
            mediaPlayer.pause();
            statusLabel.setText("TC2: Media pauses");
        }
    }

    // *TC3: Click Stop -> Output: Media stops and resets*
    private void handleStop() {
        if (mediaPlayer != null) {
            mediaPlayer.stop(); // Stops playback and resets to the beginning
            statusLabel.setText("TC3: Media stops and resets");
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}
